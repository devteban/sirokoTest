{% extends 'publicBase.html.twig' %}

{% block title %}{{ 'S I R O K O'|trans }}{% endblock %}

{% block body %}
    {{ block('navbar') }}

    <div class="w-full h-screen bg-gray-100 dark:bg-neutral-900">
        <div class="relative max-w-[85rem] w-full mx-auto px-4 sm:px-6 lg:px-8 py-2">
            <div class="flex flex-col">
                <div class="-m-1.5 overflow-x-auto">
                    <div class="p-1.5 min-w-full inline-block align-middle">
                        <div class="overflow-hidden">
                            <table class="min-w-full divide-y divide-gray-200 dark:divide-neutral-700">
                                <thead>
                                <tr>
                                    <th scope="col"
                                        class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500">
                                        {{ 'Nombre'|trans }}
                                    </th>
                                    <th scope="col"
                                        class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500">
                                        {{ 'Precio'|trans }}
                                    </th>
                                    <th scope="col"
                                        class="px-6 py-3 text-end text-xs font-medium text-gray-500 uppercase dark:text-neutral-500">
                                        {{ 'Cantidad'|trans }}
                                    </th>
                                </tr>
                                </thead>
                                <tbody id="cart-products">
                                <!-- Los productos del carrito se insertarán aquí -->
                                </tbody>
                            </table>
                            <div class="mt-4 text-right" id="total-price-container" style="display: none;">
                                <span class="text-lg font-medium text-gray-900 dark:text-white">Total: <span
                                            id="total-price" class="text-2xl font-bold">0.00</span> €</span>
                            </div>
                            <div class="mt-4 text-right" id="checkout-button-container" style="display: none;">
                                <button type="button" id="checkout-button"
                                        class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none"
                                        aria-haspopup="dialog" aria-expanded="false" aria-controls="hs-basic-modal"
                                        data-hs-overlay="#hs-basic-modal">
                                    {{ 'Finalizar compra'|trans }}
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div id="hs-basic-modal"
         class="hs-overlay hs-overlay-open:opacity-100 hs-overlay-open:duration-500 hidden size-full fixed top-0 start-0 z-[80] opacity-0 overflow-x-hidden transition-all overflow-y-auto pointer-events-none"
         role="dialog" tabindex="-1" aria-labelledby="hs-basic-modal-label">
        <div class="sm:max-w-lg sm:w-full m-3 sm:mx-auto">
            <div class="flex flex-col bg-white border shadow-sm rounded-xl pointer-events-auto dark:bg-neutral-800 dark:border-neutral-700 dark:shadow-neutral-700/70">
                <div class="flex justify-between items-center py-3 px-4 border-b dark:border-neutral-700">
                    <h3 id="hs-basic-modal-label" class="font-bold text-gray-800 dark:text-white">
                        {{ 'Pedido realizado'|trans }}
                    </h3>
                    <button type="button"
                            class="size-8 inline-flex justify-center items-center gap-x-2 rounded-full border border-transparent bg-gray-100 text-gray-800 hover:bg-gray-200 focus:outline-none focus:bg-gray-200 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-700 dark:hover:bg-neutral-600 dark:text-neutral-400 dark:focus:bg-neutral-600"
                            aria-label="Close" data-hs-overlay="#hs-basic-modal">
                        <span class="sr-only">{{ 'Cerrar'|trans }}</span>
                        <svg class="shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                             viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                             stroke-linecap="round" stroke-linejoin="round">
                            <path d="M18 6 6 18"></path>
                            <path d="m6 6 12 12"></path>
                        </svg>
                    </button>
                </div>
                <div class="p-4 overflow-y-auto">
                    <p class="mt-1 text-gray-800 dark:text-neutral-400">
                        {{ '¡Gracias por tu compra!'|trans }}
                    </p>
                </div>
                <div class="flex justify-end items-center gap-x-2 py-3 px-4 border-t dark:border-neutral-700">
                    <button type="button"
                            class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-gray-200 bg-white text-gray-800 shadow-sm hover:bg-gray-50 focus:outline-none focus:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-800 dark:border-neutral-700 dark:text-white dark:hover:bg-neutral-700 dark:focus:bg-neutral-700"
                            data-hs-overlay="#hs-basic-modal">
                        {{ 'Cerrar'|trans }}
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            fetch('{{ path('api_cart_products') }}')
                .then(response => response.json())
                .then(data => {
                    const cartProducts = data.products;
                    const cartProductsContainer = document.getElementById('cart-products');
                    const totalPriceContainer = document.getElementById('total-price-container');
                    const checkoutButtonContainer = document.getElementById('checkout-button-container');
                    const aggregatedProducts = {};
                    let totalPrice = 0;

                    cartProducts.forEach(product => {
                        if (aggregatedProducts[product.id]) {
                            aggregatedProducts[product.id].quantity += product.quantity;
                        } else {
                            aggregatedProducts[product.id] = product;
                        }
                    });

                    Object.values(aggregatedProducts).forEach(product => {
                        const row = document.createElement('tr');
                        row.setAttribute('data-id', product.id);
                        row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">${product.name}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-neutral-400">${product.price} €</td>
                    <td class="px-6 py-4 whitespace-nowrap text-end text-sm font-medium">
                        <button class="decrement-quantity text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-600" data-id="${product.id}">-</button>
                        <span class="mx-2 text-black dark:text-white">${product.quantity}</span>
                        <button class="increment-quantity text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-600" data-id="${product.id}">+</button>
                    </td>
                `;
                        cartProductsContainer.appendChild(row);
                        totalPrice += product.price * product.quantity;
                    });

                    document.getElementById('total-price').textContent = totalPrice.toFixed(2);
                    totalPriceContainer.style.display = totalPrice > 0 ? 'block' : 'none';
                    checkoutButtonContainer.style.display = totalPrice > 0 ? 'block' : 'none';

                    document.querySelectorAll('.increment-quantity').forEach(button => {
                        button.addEventListener('click', function () {
                            const productId = this.getAttribute('data-id');
                            updateCartQuantity(productId, 1, this);
                        });
                    });

                    document.querySelectorAll('.decrement-quantity').forEach(button => {
                        button.addEventListener('click', function () {
                            const productId = this.getAttribute('data-id');
                            updateCartQuantity(productId, -1, this);
                        });
                    });
                })
                .catch(error => {
                    console.error('Error:', error);
                });

            function updateCartQuantity(productId, change, button) {
                fetch('{{ path('api_cart_update') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        product_id: productId,
                        change: change
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            alert(data.error);
                        } else {
                            const quantityElement = button.parentElement.querySelector('span');
                            quantityElement.textContent = data.quantity;
                            if (data.quantity === 0) {
                                const row = document.querySelector(`tr[data-id="${productId}"]`);
                                row.remove();
                            }
                            document.getElementById('total-price').textContent = data.total_price.toFixed(2);
                            document.getElementById('total-price-container').style.display = data.total_price > 0 ? 'block' : 'none';
                            document.getElementById('checkout-button-container').style.display = data.total_price > 0 ? 'block' : 'none';
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }

            document.getElementById('checkout-button').addEventListener('click', function () {
                fetch('{{ path('api_cart_finalize') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            alert(data.error);
                        } else {
                            document.getElementById('hs-basic-modal').classList.remove('hidden');
                            document.getElementById('hs-basic-modal').classList.add('hs-overlay-open');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });
    </script>
{% endblock %}